<div class="allthethings">
  <div class="product-filter-wrap">
    <p class="checkTitle"><strong>Brand</strong></p>
    <form>
      <label class="checkStyle"><input type="checkbox" name="p-brand" value="Razer" id="Razer" /> Razer</label><br>
      <label class="checkStyle"><input type="checkbox" name="p-brand" value="Beats by Dre" id="Beats by Dre" /> Beats by Dre</label><br>
      <label class="checkStyle"><input type="checkbox" name="p-brand" value="Sennheiser" id="Sennheiser" /> Sennheiser</label><br>
      <label class="checkStyle"><input type="checkbox" name="p-brand" value="Sony" id="Sony" /> Sony</label><br>
      <label class="checkStyle"><input type="checkbox" name="p-brand" value="other" id="other" /> Other</label>
    </form>
    <p class="checkTitle"><strong>Type</strong></p>
    <form>
      <label class="checkStyle"><input type="checkbox" name="p-type" value="Headphones" id="Headphones" /> Headphones</label><br>
      <label class="checkStyle"><input type="checkbox" name="p-type" value="Headset" id="Headset" /> Headset</label><br>
      <label class="checkStyle"><input type="checkbox" name="p-type" value="Earpiece" id="Earpiece" /> Earpiece</label><br>
      <label class="checkStyle"><input type="checkbox" name="p-type" value="Earbuds" id="Earbuds" /> Earbuds</label><br>
    </form>
  </div>
<!--
<div class="container">
  <br>
			<input type="text" class="form-control" id="myInputz"  placeholder="Search for products.." title="Type in a name">
	<br>
</div>
-->

<form autocomplete="off" action="">
  <div class="autocomplete" style="width:300px;">
    <input type="text"  id="myInput" placeholder="Search product..." class="UIsearch">
  </div>
  <input type="submit" class="UIsearch">
</form>

<script>
  let lizt = []
</script>

{{#each products}}
<div class="rowz">
	<div class="product" data-category="{{brand}} {{type}}" style="margin-left:auto;">
        <div class="product-grid5">
            <div class="product-image5">
                <a href="#">
                    <img class="pic-1" src="/uploads/{{productImage}}" >
                    <img class="pic-2" src="/uploads/{{productImage}}">
                </a>
                <ul class="social">
                    <li><a href="" data-tip="Quick View"><i class="fa fa-search"></i></a></li>
                    <li><a href="" data-tip="Add to Wishlist"><i class="fa fa-shopping-bag"></i></a></li>
                    <li><form method="POST" action="/order/cart/{{id}}">
							<button type="submit" data-tip="Add to cart"><i class="far fa-cart-alt"></i></button>													
							</form></li>
                </ul>
                <a href="/product/details/{{id}}" class="select-options"><i class="fa fa-arrow-right"></i>Read More</a>
            </div>
			
            <div class="product-content">
                <h3 class="title">{{productTitle}}</h3>
                <div class="price">${{price}}</div>
            </div>
        </div>
      </div>
    </div>
  </div>



  <!--<section class="products">

		<div class="product-card">
			<div class="product-image"></div>
				<img src="/uploads/{{productImage}}" alt="Denim Jeans" style="width:100px">
			</div>
			<div class="product-info">
				<h5>{{productTitle}}</h5>
				<h6>${{price}}</h6>
    		</div>
		</div>

	</section>-->

  <script>
    lizt.push(`{{productTitle}}`)
  </script>

  {{/each}}
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
  $(document).ready(function () {
    $("#myInput").on("keyup", function () {
      var value = $(this).val().toLowerCase();
      $("#Product ").filter(function () {
        $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
      });
    });
  });
</script>

<script>
  var $filterCheckboxes = $('input[type="checkbox"]');
  var filterFunc = function () {

    var selectedFilters = {};

    $filterCheckboxes.filter(':checked').each(function () {

      if (!selectedFilters.hasOwnProperty(this.name)) {
        selectedFilters[this.name] = [];
      }

      selectedFilters[this.name].push(this.value);
    });

    // create a collection containing all of the filterable elements
    var $filteredResults = $('.product');

    // loop over the selected filter name -> (array) values pairs
    $.each(selectedFilters, function (name, filterValues) {

      // filter each .product element
      $filteredResults = $filteredResults.filter(function () {

        var matched = false,
          currentFilterValues = $(this).data('category').split(' ');

        // loop over each category value in the current .product's data-category
        $.each(currentFilterValues, function (_, currentFilterValue) {

          // if the current category exists in the selected filters array
          // set matched to true, and stop looping. as we're ORing in each
          // set of filters, we only need to match once

          if ($.inArray(currentFilterValue, filterValues) != -1) {
            matched = true;
            return false;
          }
        });

        // if matched is true the current .product element is returned
        return matched;

      });
    });

    $('.product').hide().filter($filteredResults).show();
  }

  $filterCheckboxes.on('change', filterFunc);

</script>


<script>
  function autocomplete(inp, arr) {
    var currentFocus;

    inp.addEventListener("input", function(e) {
      var a, b, i, val = this.value;

      closeAllLists();
      if (!val) { return false;}
      currentFocus = -1;

      a = document.createElement("DIV");
      a.setAttribute("id", this.id + "autocomplete-list");
      a.setAttribute("class", "autocomplete-items");

      this.parentNode.appendChild(a);
      for (i = 0; i < arr.length; i++) {
        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {

          b = document.createElement("DIV");
          b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
          b.innerHTML += arr[i].substr(val.length);
          b.innerHTML += "<input type='hidden' value='" + arr[i] +"'>";

          b.addEventListener("click", function(e) {
            inp.value = this.getElementsByTagName("input")[0].value;
            closeAllLists();
          });
          a.appendChild(b);
        }
      }
    });

    inp.addEventListener("keydown", function(e) {
      var x = document.getElementById(this.id + "autocomplete-list");
      if (x) x = x.getElementsByTagName("div");
      if (e.keyCode == 40) {

        currentFocus++;

        addActive(x);
      } else if (e.keyCode == 38) {
        
        currentFocus--;

        addActive(x);
      } else if (e.keyCode == 13) {

        e.preventDefault();
        if (currentFocus > -1) {
          if (x) x[currentFocus].click();
        }
      }
    });
    function addActive(x) {
      if (!x) return false;

      removeActive(x);
      if (currentFocus >= x.length) currentFocus = 0;
      if (currentFocus < 0) currentFocus = (x.length - 1);

      x[currentFocus].classList.add("autocomplete-active");
    }
    function removeActive(x) {
      for (var i = 0; i < x.length; i++) {
        x[i].classList.remove("autocomplete-active");
      }
    }
    function closeAllLists(elmnt) {
      var x = document.getElementsByClassName("autocomplete-items");
      for (var i = 0; i < x.length; i++) {
        if (elmnt != x[i] && elmnt != inp) {
          x[i].parentNode.removeChild(x[i]);
        }
      }
    }

    document.addEventListener("click", function (e) {
      closeAllLists(e.target);
    });
  }


  autocomplete(document.getElementById("myInput"), lizt)
</script>
